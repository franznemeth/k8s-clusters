---
# Source: cilium/charts/cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVB2aTRCZkVYNHI0b1NyZjRkdnB2eFV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNd09URXhOVFV4T0ZvWERUSTNNRE13T1RFeApOVFV4T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0Mmh1WmxWVGVQdWhHL1l1eTRMN0NMeGp0ajgzUTROSTVZbjFldHBrTll5RFZiajUKOUp6d0F6MmVwRGFWcGlSM01mUk92SjlTUjRHVFNtMkxjcVY0bmROZjJqQ290MndjZVpKQTF6Q2V0VGVxQXJ5NQp3eU1wM1lHT1VvS3JmYnNPbzd1RHdVcEg3SVdCM2ZrSzRjY2VFUzVOUHB0UmU4MFdOc0V4T2wyV0w4cUxjUjlBCjZ4cFZsY1ZRWHBjZWpWSmdwR29PTFczYWFBRkpPKzlBWVIrdTBiNGJ0U3Y5aHd5RlhJNG9XN2E2UzhwMXhPTjUKdmhzMU9KYkprQ2hxQmt5SlpnaVRlMDc5NmJBeTRRQUM3VjVKZjZuRUhGZE1HM3NpaDFqTnZGNktEUEYwTk5wRwppbmR2eFV5OXQ1Z056S0g4OEZXWU1lZjFmNG9zQTFoUjY2MzFnd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ216aGgza3RkNHVLZ0tBMi9tenYvR3dwN2lXTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWRmR3EvVkxiNlRWOUUzY2lkMTJWekV4ZmRzbEg2eXpuQ3Z2TFkyTysvZkFNZFYwZGlic2VvCnRDZW96QW9aOUkyNDZSTllOaS9NZjJnRERFRjErZUVubDdpK2RUMWw4Q2JmeWxZL3ZCb3JFK21yclk0akNCancKejlpTmtRVG5kYlhNRXJpVTJ1UXU0bGNrTGNmR3hpUVlZb0pOa0piaWE4ckRyZlVYa2pnbWdEUjFOQXZ5WUlnRQp1Wi9FVG11T2kweEtvYVBTR3J5d3F2KzVFTWlFcDd3OVpUdXdWZFIvcjM5QTZnV1UrQitGWVAxVytBTlYxUFhHCkVKM3hsOHhmK0EvWlNLcVhMUEw2SkJ0eGVWVW1MQ2VGR3Jqcy9wbWhKNDVlTGJmcXpFL05lZk9qSUtwZWRjUG8KRnJQZmlwejdkc0xPUTJsd2d6Rld6RW9aNkYrdU5HMHcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdDJodVpsVlRlUHVoRy9ZdXk0TDdDTHhqdGo4M1E0Tkk1WW4xZXRwa05ZeURWYmo1CjlKendBejJlcERhVnBpUjNNZlJPdko5U1I0R1RTbTJMY3FWNG5kTmYyakNvdDJ3Y2VaSkExekNldFRlcUFyeTUKd3lNcDNZR09Vb0tyZmJzT283dUR3VXBIN0lXQjNma0s0Y2NlRVM1TlBwdFJlODBXTnNFeE9sMldMOHFMY1I5QQo2eHBWbGNWUVhwY2VqVkpncEdvT0xXM2FhQUZKTys5QVlSK3UwYjRidFN2OWh3eUZYSTRvVzdhNlM4cDF4T041CnZoczFPSmJKa0NocUJreUpaZ2lUZTA3OTZiQXk0UUFDN1Y1SmY2bkVIRmRNRzNzaWgxak52RjZLRFBGME5OcEcKaW5kdnhVeTl0NWdOektIODhGV1lNZWYxZjRvc0ExaFI2NjMxZ3dJREFRQUJBb0lCQUVTSi95KzQxVC9SOFF3TQovTUhLeWRzaTQ3UllmV042YlVSeVFNMVBUY0dCS0JkaHorN3NzdmpURHpUWXZTWGdYTGJMVUoxR2dLMytLemZXCkpoV0s1cjg4SFliaFJqdDlhRXE2TUFiNndXU0JUOFJFR0x0bXFaK0FhZHBGd0taMHYrektCMXUxVVpsKzd1QXYKMERROWYrdjF2S0lYMHVTTDZMQS9sQkQycGtobks2eDY4UTk5RkdsSHh6Ym44enRnZzV1UGlmaHpJSW9nUW8wOApsbWhXdkpKYml6aG1lcDZrUytwU3M2cEthc2s3OFBNSGFlc3pDTHJReGFmeG5JRU9nM2VGNEMyNmd0K3FnemJ5Cm1COVZxR3NFK2VSUXlIbTg3alFMRDR6aUFPcElRRzZMVklncTd0Vzk4aFBqbDBKdHhzVlh0TnA4WVRoOExKOGcKUlYzUllwRUNnWUVBMWl1Z1REZTFHTnRaUk1OYVlPMGlEUkpVMzJEeHNFdzNXU2VKbDQ0R2l5VzJnYWFXSmNXRgpPR1B0TWcrbnc0MVRlN29WQVhMWmlTaFNYTVp4ZFcwY29JL0U2V0hOYUI4Zm9vdFd3T3BTWDBOdHJoeG41QnJCCmdRRG4zNFNkdXUrSU9iSzd1UW1McjNNaE5FTVRhdm5mU2ZtTWJjS2NLUGVNazVuSXZ4WXF2cHNDZ1lFQTJ6cXoKd2dLekZKWHJPRGpxbElMcHY4bXpYc2IvQzFxTXRXUnhmdXVHWWZoRmQwcWVkMWFBd3dlQjBzSHh5Z3A3QW5VQQozUTJBYzliaThvNCs2OHBGL2FpYVVrb2xlcUlMcUU3K2gvNklnVFZ2cnBaQ3RQdCtsV1p4T2pzMURwVFgzVHE5ClVlQWhlbzFESENRcnRsd0JkS241Tng5WnVhVDJNWk1KNnk0cVh6a0NnWUI0Rjl4NkFKN1hBbUNyTTFQaGwvY0oKRjJkcUhzVkgwMlVSNUI2K1VoQ1BSQ1Z6ekFMVHlVOXJrSFQ0SmxrdlNYY3ZvT2VZZVZ0TUVzVWthczVDUjEzUApGdThXNHhXNE5nT2FOTUgveVNWSmI5ajMwY3ZiMTdqNzZwTWEvaFVvTnByUHA4Nmw4cGxXVjV1ZDM2THEwSlNKCnVab3FEZjljNVhyNVpUbHhGVEFBMHdLQmdFY2pLMFZmUHVFRkxNaVhuM2NGYS9neDZTUnVDa0NTNTJuTTZBODUKT2VmOGVmNFZsb28rNVpWamtEcmxlQ0lKZUpUNWhvZzBZMlF6Ykgwc3J6b3Y3cm82eGFqQ0twczZqZkhWZ0Q1OAoxNnFsdmxHMnJIcXh5UWVOc0Z3bTdqYUhFZXpWckswdXYyNVcvRm5iV3R2WHl4a2lOcDR1YkIwVGJGZjEwSmdoCjZObnhBb0dBQklJY0pPVGxQNVNpRjM2L1FLS1M0UzVvaVlOL1JqNGUwNk55OU5jL3pXMUQxTXVZQ2FTUU4vMDQKQnhCb2dsU1YybURISURpM244NURuWStibGl3NWtOMUhKYzZiNVhJT0ZwNkx2alF0WnpMeHVWVXVOVzBUeWw3bwpianhBQVoyUlluSmU2bUh1cEtoV2hkMExZeVROSnRiT0FPZjNpTkhrUFF1R2pSb1hCZEE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/charts/cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVB2aTRCZkVYNHI0b1NyZjRkdnB2eFV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNd09URXhOVFV4T0ZvWERUSTNNRE13T1RFeApOVFV4T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0Mmh1WmxWVGVQdWhHL1l1eTRMN0NMeGp0ajgzUTROSTVZbjFldHBrTll5RFZiajUKOUp6d0F6MmVwRGFWcGlSM01mUk92SjlTUjRHVFNtMkxjcVY0bmROZjJqQ290MndjZVpKQTF6Q2V0VGVxQXJ5NQp3eU1wM1lHT1VvS3JmYnNPbzd1RHdVcEg3SVdCM2ZrSzRjY2VFUzVOUHB0UmU4MFdOc0V4T2wyV0w4cUxjUjlBCjZ4cFZsY1ZRWHBjZWpWSmdwR29PTFczYWFBRkpPKzlBWVIrdTBiNGJ0U3Y5aHd5RlhJNG9XN2E2UzhwMXhPTjUKdmhzMU9KYkprQ2hxQmt5SlpnaVRlMDc5NmJBeTRRQUM3VjVKZjZuRUhGZE1HM3NpaDFqTnZGNktEUEYwTk5wRwppbmR2eFV5OXQ1Z056S0g4OEZXWU1lZjFmNG9zQTFoUjY2MzFnd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ216aGgza3RkNHVLZ0tBMi9tenYvR3dwN2lXTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWRmR3EvVkxiNlRWOUUzY2lkMTJWekV4ZmRzbEg2eXpuQ3Z2TFkyTysvZkFNZFYwZGlic2VvCnRDZW96QW9aOUkyNDZSTllOaS9NZjJnRERFRjErZUVubDdpK2RUMWw4Q2JmeWxZL3ZCb3JFK21yclk0akNCancKejlpTmtRVG5kYlhNRXJpVTJ1UXU0bGNrTGNmR3hpUVlZb0pOa0piaWE4ckRyZlVYa2pnbWdEUjFOQXZ5WUlnRQp1Wi9FVG11T2kweEtvYVBTR3J5d3F2KzVFTWlFcDd3OVpUdXdWZFIvcjM5QTZnV1UrQitGWVAxVytBTlYxUFhHCkVKM3hsOHhmK0EvWlNLcVhMUEw2SkJ0eGVWVW1MQ2VGR3Jqcy9wbWhKNDVlTGJmcXpFL05lZk9qSUtwZWRjUG8KRnJQZmlwejdkc0xPUTJsd2d6Rld6RW9aNkYrdU5HMHcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRYktUQTBBU3FCblA4eVAxM2d6RGRmekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpBNU1URTFOVEU0V2hjTk1qY3dNekE1TVRFMQpOVEU0V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQWRzMCswRTdHWlJ1Ykt1SDBSQlkvbjBkSXBqeDgKeXZCdjdnUXdPRXJQMFBYY3BOV1BUeEh5d1BDUkQ4S2NFOFZyRk0xc1FMKzRZVjB6TlkvN0pxNDdPNVREOHB1bwpEb05nVE9HWjlnRjB3d2xWcEpMZWhFU0piRFdkRlhUMk5kNHlGR0pIL1I3UUk2YlgvbitvdnkzdXBuYW0vNGJZCjlVbFBwblhNQVJQbENxSG5QSGJYSkkxOFRISzg4SXRYKy9aYnQwSURjbmJoOENnNHRwYVdkNTJ0cDdhNS81RWgKOFJoYXpnclNubmExSW95dGVyYWJkTDFVQmZlWmlacUhTUFVYcDh1a3Z3N0dWc3hhaUJ1cnE2Zy9YNXVoekYzMApQdTFDaW1pR0pac0VZWjl1blp5NnVPMlRaTUpveENmQmNjN20vUTU3ZzNxcWdqUUlSOWt3MGE4dkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZDbXpoaDNrdGQ0dUtnS0EyL216di9HdwpwN2lXTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFtelVsN2k1ZHhhMC9vV0N2SHJiM01FcFpxaXpVL0UxYjJoU2RadUErQjlaZUVOQU8KTnY5NXQ2NzVUc2VYYXh1T2tBNTEzajVYUklpTmZXWWhNYjRleUMvYThORzFOVktPZXhKUTBzNE1pK01SM3pIUApqUWtqbEFkb0d5OVJzekF1eGI1ZmxjbEZBK284VnpNQWtrSzhiTmxsMGdoNUtXSHVKaUUxaFpqMUdFU3FoSE04CndvNFNDNERiY0Vud1NKdy9oMGhVZ0xpNG5iRWI2L0Jpc2pYam81eFVMTGgwNEJROGczb2hEQ0s3cFQ3Zkx4Q08KM1hZdUFKSTBFbFk3Mis3SEZoZTI4bExudWVwY3RuU3pIOTkxM3hYbGdYQit2eUlPak9ZL3BLWEh0VDQyTjBDWAovamVabGlOQmRmYnBEQXU3eFJiK2IrK0VTT0g1d0d1OGpOM21Qdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd0hiTlB0Qk94bVVibXlyaDlFUVdQNTlIU0tZOGZNcndiKzRFTURoS3o5RDEzS1RWCmowOFI4c0R3a1EvQ25CUEZheFROYkVDL3VHRmRNeldQK3lhdU96dVV3L0ticUE2RFlFemhtZllCZE1NSlZhU1MKM29SRWlXdzFuUlYwOWpYZU1oUmlSLzBlMENPbTEvNS9xTDh0N3FaMnB2K0cyUFZKVDZaMXpBRVQ1UXFoNXp4MgoxeVNOZkV4eXZQQ0xWL3YyVzdkQ0EzSjI0ZkFvT0xhV2xuZWRyYWUydWYrUklmRVlXczRLMHA1MnRTS01yWHEyCm0zUzlWQVgzbVltYWgwajFGNmZMcEw4T3hsYk1Xb2dicTZ1b1AxK2JvY3hkOUQ3dFFvcG9oaVdiQkdHZmJwMmMKdXJqdGsyVENhTVFud1hITzV2ME9lNE42cW9JMENFZlpNTkd2THdJREFRQUJBb0lCQUY2UXdPNFJHZk9mTUQ1QQpocjhuU1NzL2pwM2ltQ3ZVNXVpSU1XU2o5QlpDSE51cDNnakpHQStIdjJ2M0syN1d4QlNHSnh6K2YzVVAyZVJVCmVBYzJEVHVyWGNBZGoxKzJxZFNDVWdMOC9lQXFDSWNkRXREa2VteHZUN1I4RzNqeUpOZkViam5pNCtYdTdvYUkKVko5TU9EeGZiRU5Ib0RFdjdES0hucTk3QkJSd0ZqZVVRWFozSVJNU1lFaWpURTNvbDlCeUJZWEszN1JvSUpJZgpRaWlnbUtYVmk4TmtzYmRJc0NWSm9jcXF3RHozaFVxamVOeGJQNlJGSFJoSDkvS3JoKytNN0xsdVM1dGlUZW52CjBBVE5zZFdFdkh1Y1UraGU5V3pha2lpSjV5YnZ4NE5zbXNod09OQUpZZzNrNFpQaE5GeHBRRTBnUXNjMGZTUlIKWjdmMHlMRUNnWUVBeElld3IxRXVTVXNvenhIdHAya3BJSUlQcUR3dmdNcHBWdTJTUDFxd1c2d21vZklkM0QvZQp1UXNDbkprbVo1Q3o2cFR4SjlsMHdodWJnNXZqZ2dHQ21DTmdyUTlpWXVVUjZMc2I2Q2VaYml2UWxUSUNNTDdqCmZBL0JTT0JUYzBhemQzZ0oyQkxiRDVMQkdYYUFySFUwdEh4MmxKanBPUnN2Q3ZBaHI3MGhtN2NDZ1lFQStyUWoKamNDYzR6RU9YcjJvVXQzUHJtNzVYZ3NHVm81RkpuUGZHZmFaVGVWUHoxUmJEQ3JCaUZ1cWRnVm9XOGg5MlBsUAp0WUgrTzNvRGhVMkw0L3ZFRVpRNTY1Q255SWJPVitnS2JIc3RaeTd4THovaVdUOElrb1RDUHlreCt0VVI1dWY4CjUvZzF3TTdNZmFIWFhXNXE4UHZDbU1hdmQ3WkZKRTFPaWoyMStFa0NnWUJWQjZ3L1BpMTdrcVEyYXpoYXZWb0kKOFp6YW1pZW5YbXdUS3ppaVpwZDFJbGVZcTh1VmxxRERpT3I1WEIzTW8wUGtrOHAvQmt2SkMrN09FMjFzdTBDSQptSTNrY29xTDVUWkpibU1WbjhSM2NVZU90Wk5UQ2RRY3dpaExZcHRZZmRkNk1ocDRQVGhBVmF0c1crUXlPWWV6CkswS1c2azNGNG1nSklIcENzZDdQb3dLQmdESStFN24rMWZJNkRKVTBFUjI2VWpxMUJzaXdFTzhieUFQeXlNMWQKUEUvK0dzYUVNMUwyNXA0N01LaENZUzJ6dW5UWFVnQWdNeUVjVE1SVVRDcStkQWJKMittM3JjaGtLOG8yT0pDUgpCd0pjeC8wZUluQ2NUMDE5eWFmNnk0ZG5XQlVjZlBUSUs0MmVaQ0R4WkVYWE1SdG1lUk5CRGoxQmpBM0FhSE1QCjl2M3hBb0dCQUk1U0hROGpFR0l4cTdWbkt0THJPTlV0TXZqSTV1NGdFWjk2K1JheHk4Tk8rcWNzZTZkanVGalkKMEswZXNUVFdPRHR2MUV1UVRpb3lxSFFKcDhQa2JsMkh3Qmw0aHBBc1BPOVdWeGoxTklYK0F0MXZLclg3cm50SApaVXlFSjR0dlBCZG8zMzZBYUpsaXFBYXRORVREcFhUMG1OY3ZkUUxNOWQwV2JldTQ5SzRGCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/charts/cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVB2aTRCZkVYNHI0b1NyZjRkdnB2eFV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNd09URXhOVFV4T0ZvWERUSTNNRE13T1RFeApOVFV4T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0Mmh1WmxWVGVQdWhHL1l1eTRMN0NMeGp0ajgzUTROSTVZbjFldHBrTll5RFZiajUKOUp6d0F6MmVwRGFWcGlSM01mUk92SjlTUjRHVFNtMkxjcVY0bmROZjJqQ290MndjZVpKQTF6Q2V0VGVxQXJ5NQp3eU1wM1lHT1VvS3JmYnNPbzd1RHdVcEg3SVdCM2ZrSzRjY2VFUzVOUHB0UmU4MFdOc0V4T2wyV0w4cUxjUjlBCjZ4cFZsY1ZRWHBjZWpWSmdwR29PTFczYWFBRkpPKzlBWVIrdTBiNGJ0U3Y5aHd5RlhJNG9XN2E2UzhwMXhPTjUKdmhzMU9KYkprQ2hxQmt5SlpnaVRlMDc5NmJBeTRRQUM3VjVKZjZuRUhGZE1HM3NpaDFqTnZGNktEUEYwTk5wRwppbmR2eFV5OXQ1Z056S0g4OEZXWU1lZjFmNG9zQTFoUjY2MzFnd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ216aGgza3RkNHVLZ0tBMi9tenYvR3dwN2lXTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWRmR3EvVkxiNlRWOUUzY2lkMTJWekV4ZmRzbEg2eXpuQ3Z2TFkyTysvZkFNZFYwZGlic2VvCnRDZW96QW9aOUkyNDZSTllOaS9NZjJnRERFRjErZUVubDdpK2RUMWw4Q2JmeWxZL3ZCb3JFK21yclk0akNCancKejlpTmtRVG5kYlhNRXJpVTJ1UXU0bGNrTGNmR3hpUVlZb0pOa0piaWE4ckRyZlVYa2pnbWdEUjFOQXZ5WUlnRQp1Wi9FVG11T2kweEtvYVBTR3J5d3F2KzVFTWlFcDd3OVpUdXdWZFIvcjM5QTZnV1UrQitGWVAxVytBTlYxUFhHCkVKM3hsOHhmK0EvWlNLcVhMUEw2SkJ0eGVWVW1MQ2VGR3Jqcy9wbWhKNDVlTGJmcXpFL05lZk9qSUtwZWRjUG8KRnJQZmlwejdkc0xPUTJsd2d6Rld6RW9aNkYrdU5HMHcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRSzFxU2l3RUtCOVpXKzFxWExGMVBxekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpBNU1URTFOVEU0V2hjTk1qY3dNekE1TVRFMQpOVEU0V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBb3hHN05qSG9YSVF2VU9iNTBCMisKSHhYdkhQc3JtZE44QXd6cE1LL1lubGZlWDBBdzFwRWtydjM4Um5YbHZodUJMOG5mMEwzMmU4WGI1YVR6WndmNQppcEdCV3VJVzRoUGN5Q0thQTUrSFVuVG5aQzNVak05cHlUNzNGc0crTnBrdEcrR1M3cXU3Y0ZwWGtaN0cwU09ICjZYNlNvcXFsRit1bTB5UTVQeHFCcEcrcVVTMGRuV2JqZFFaSEFVZDVKbDdqenZ0Z2xnbVVWZkxHL28xYW81UXEKM0szTjhZY1dHQmZreVE4dlM4YXB0VGl6YUNSMUtOQ0J1V2x5UThuUHlpQ1pyVlk5UmdTNytSUE0wL3JGK2JDNgo5dmFkbmRta3o2cndSbjhlclZoVmtFbnNwbUtxcWlqcTQ3MnJxc2pMYmI2RzRkSEZ0eUlDbVhZYUhZOGd1NzJkCm5RSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRcHM0WWQ1TFhlTGlvQwpnTnY1czcveHNLZTRsakFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBTmJKS2d6RVJOMklqQU4zREp3NXNlMnMrQW1rL0gKandKVkloUlRVUVZzcHpZOG02b2RUSUJZQ3JQTGkwMTk0cXNrQ0doeFY1SHhiUVJaTXZORTMwQ0RUNjlxSjRwZgpLMW5rZlNLWkliZ3BBZlRkc1pNcCtIQ3NhcjA1cjViYzFGSW5BVHlZNWNHYXllQlZwZ0s4Wk4rL0FuclQ5eDA3Cis1dldtd3JIU25oN0ptMmtiVlN3MEZjb0s2a3NjYmk0NmhSY09NSnZvOWd1c2NTSmFHRHhEM0VDSTN6dStNdGMKcW9xWGQ0UFBucTBVKy91TWc4RE5mVFl3NkZDc1BraTAvcy9YeGs1VWh2Q09sMDVsdFFHM00rSytNSW9tVjlxYgowQ0dIc2V6emlGQUlKZDhXTzNLSmE1QSt5b09xZlhKbDZrT01qZll3Tnh0eFNDeGNQajZXWmNaMAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb3hHN05qSG9YSVF2VU9iNTBCMitIeFh2SFBzcm1kTjhBd3pwTUsvWW5sZmVYMEF3CjFwRWtydjM4Um5YbHZodUJMOG5mMEwzMmU4WGI1YVR6WndmNWlwR0JXdUlXNGhQY3lDS2FBNStIVW5UblpDM1UKak05cHlUNzNGc0crTnBrdEcrR1M3cXU3Y0ZwWGtaN0cwU09INlg2U29xcWxGK3VtMHlRNVB4cUJwRytxVVMwZApuV2JqZFFaSEFVZDVKbDdqenZ0Z2xnbVVWZkxHL28xYW81UXEzSzNOOFljV0dCZmt5UTh2UzhhcHRUaXphQ1IxCktOQ0J1V2x5UThuUHlpQ1pyVlk5UmdTNytSUE0wL3JGK2JDNjl2YWRuZG1rejZyd1JuOGVyVmhWa0Vuc3BtS3EKcWlqcTQ3MnJxc2pMYmI2RzRkSEZ0eUlDbVhZYUhZOGd1NzJkblFJREFRQUJBb0lCQUg5R0pKZGRCcDNHOGVNMApFOEN5cGlRL0MxelVVU2lEbnVRR25LN0tZTWpkamd0TDM1Sm93SGZ3ZG9sTUZaOTJlak1oWGhYZlhsVW1qY1hFCkk5SERzS25OZldmQTFObHBaVVd6Yy8vbDhFbVVRdEcyejVHRGhXNTBQWWcrZVViRjhTWTB2bWlZRXZqVEdrdm0KNEFoMXNldTFSWisranBLSDg3SVNNTGdtNlE2OGRlOUFZNzFUeE1TWmxYdGNla2o1TnRUWmxEOThUdEF1L1d5OQp4V1Z0QXJkYVBRM2IrSENRblFld05KeGZvbmZXaExJR0tqdFoyaDNpcWhuYlZTTFJ1cVNmcnk5VURueCthZ1FGCnNYejJ0YnF5aXErZnFCRVZFenlqaGZXSmdsQlRHQ0ZZZWI4Y2lPSDFxdFNkUUdpanNDV21tYVY4SnR4b1ZVN3MKSzRReVJJRUNnWUVBeCs1RmlZUnE1TllvZjgwYVU4QkZIdHkxbTdoOUIyVUZYZGIwWU1NOVFDZ2d2MVZjaGY5cwo5OG0rbE1acUYzZEpyZFZMZnN0UkZLRU0xOXVpZXViSnAxSHY3dmxpWXk1VHFuOHNyQ3VtaTNPZGRKZWJEQ0Q1CklnNGhIVHNwRFcxWWZZK3RsakRmQmk0cHV5VWgxcGJQc2sveC84ZzNUekZUQkhERGwvVitzeUVDZ1lFQTBNMEwKYUdnK0gxY05BMC9GNFFmNUcrb093RGg4LzhuZ1FWQVpzRVpnQ09yWkkwb1JUQlZtTjQvcXhRZGEwMHY4dU9NMApnam43dk45eGY0c2xIQWhxY1d2L3RyQnU5L1lwbmhVZ0p0cWl4ellTcms1ZDZHNFdSbTA1VjdMQ1YrQ2MwaGlrCkkyZTNKZUphWFpDbHRJRG8vYWNHanc0cHA0SHlIb1dzMjVPcDF2MENnWUJPNjZHTGJUZjg2UVRIbmlEOFduTnUKZ1ZVM0NSWmhxdUQ1Yi9hN2s1WkVFeE1LTkJuMzB5SWlsZ0tqRzhlWlI3OVAzVmlWenBCTkFsM2RmNWVkeUNobAo0aFJDVXpNaFQ1STdSVVJQR2xQOXpEK2xYSXNadUpKZmZSQlpSNWNtODdqd3A1eXdJczZHMUFZcEY3bEp5ZkptCnd1UVdRZVNEWUVjVEE2aFIvZGhyd1FLQmdRQzFTOVJENjM5Rkp3aWRmMzZKVGFyMm1kd0Urd2ROOGJOT0FvYkwKajgrQzdxZHJCTHpRR3lTTnllQkhBNFBSUTRGRDU4T0g3MkN0TmpZT1VIc0FSQzVvSFNZRE1sNm4zbzEwUFZPVgphUEU5bDYzUXV5cSt6aGQ1UHcweklIdXVZZERJZTZ6Sk1Sek5RQ1RHYVBuNEtKWWs2QW5CM01JK040NUxBalo4CjBWSCs0UUtCZ0EwSlVMSXdyRkRHeDJJdnoxSll5WThqMDJyMDhrL2JFWk43WlpXK201WTRNbjF1MUYyaXJjMjQKaXk1dXNmR1JpeXkwekdOY3ZGUEJnaHZ2WXVkNjBubGhsNG1PcXExUHdLN21wbW9sQUQxTisrMTNXY1B2MDErOApVV3JQRGlLTzU2T3NVaVNiMnhZZFk3MEhUNFgwTStXUS9mcjNORmttYm45NDN2UWU4NnNVCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/charts/cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "true"
  enable-bbr: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  endpoint-status: "health controllers"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.0.0.0/8"
  cluster-pool-ipv4-mask-size: "24"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  annotate-k8s-node: "true"

  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/charts/cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/charts/cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
---
# Source: cilium/charts/cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  # To annotate the k8s node with Cilium's metadata
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/charts/cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/charts/cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/charts/cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/charts/cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/charts/cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/charts/cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/charts/cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/charts/cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "c6eca044409e43caca362a59fd721e998496d26f5f42e405f7238a0ede4d5774"
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: wait-for-node-init
        image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          until test -s "/tmp/cilium-bootstrap.d/cilium-bootstrap-time"; do
            echo "Waiting on node-init to run...";
            sleep 1;
          done
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: cilium-bootstrap-file-dir
          mountPath: "/tmp/cilium-bootstrap.d"
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
      - name: cilium-bootstrap-file-dir
        hostPath:
          path: "/tmp/cilium-bootstrap.d"
          type: DirectoryOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/charts/cilium/templates/cilium-nodeinit/daemonset.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: cilium-node-init
  namespace: kube-system
  labels:
    app: cilium-node-init
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-node-init
spec:
  selector:
    matchLabels:
      app: cilium-node-init
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/node-init: "unconfined"
      labels:
        app: cilium-node-init
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-node-init
    spec:
      containers:
        - name: node-init
          image: "quay.io/cilium/startup-script:62093c5c233ea914bfa26a10ba41f8780d9b737f"
          imagePullPolicy: IfNotPresent
          lifecycle:
          env:
          # STARTUP_SCRIPT is the script run on node bootstrap. Node
          # bootstrapping can be customized in this script. This script is invoked
          # using nsenter, so it runs in the host's network and mount namespace using
          # the host's userland tools!
          - name: STARTUP_SCRIPT
            value: |
              #!/bin/bash
              
              set -o errexit
              set -o pipefail
              set -o nounset
              
              echo "Link information:"
              ip link
              
              echo "Routing table:"
              ip route
              
              echo "Addressing:"
              ip -4 a
              ip -6 a
              
              
              mkdir -p "/tmp/cilium-bootstrap.d"
              date > "/tmp/cilium-bootstrap.d/cilium-bootstrap-time"
              
              
              
              echo "Node initialization complete"
              
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - SYS_MODULE
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            privileged: false
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      hostPID: true
      hostNetwork: true
      priorityClassName: system-node-critical
---
# Source: cilium/charts/cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "c6eca044409e43caca362a59fd721e998496d26f5f42e405f7238a0ede4d5774"
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.0@sha256:e26ecd316e742e4c8aa1e302ba8b577c2d37d114583d6c4cdd2b638493546a79"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/master: "true"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/charts/cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.15.0@sha256:45b3ea70b73aee01644f800b8f6138c36446bfb130d2b88b0f75775ebe6a9ab6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          startupProbe:
            # give the relay one minute to start up
            grpc:
              port: 4222
            timeoutSeconds: 3
            failureThreshold: 20
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/charts/cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-nginx-configmap-checksum: "e8acee96ed990156efd0291c8c33709d2c7902d2ec993eefa16c7cd3d1a9d84b"
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.3@sha256:e6b825302fc1e406b1305363fe0bcd1fdf95730b32c2b99a2b36dfa37bdaeec2"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.3@sha256:1cd84251cec46e20f9e839ee0afba9b51c8de59d35681234f701d7f42062f138"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/charts/cilium/templates/hubble-ui/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  ingressClassName: internal
  tls:
    - hosts:
      - cilium.int.fnemeth.net
      secretName: cilium-tls
  rules:
    - host: cilium.int.fnemeth.net
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: hubble-ui
                port:
                  name: http
